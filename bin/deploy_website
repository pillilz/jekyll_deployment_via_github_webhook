#!/bin/bash
# Called from /usr/local/sbin/deploywebhookgithub
# 
# TODO use locking, so that no two instances of the program run at the same time; otherwise race conditions can occur

if [ $# -lt 2 ]; then
    echo "usage: $0 local_repo html_link [email]"
    echo
    echo '1. Update local_repo via git pull'
    echo '2. Jekyll build in local_repo and move _site to $(basename html_link)/$(date +%Y%m%d%H%M%S)_$(git parse-rev HEAD)'
    echo '3. Replace symlink html_link atomically with link to newly created destination'
    echo '4. Remove old htmldir'
    exit 1
fi
local_repo="$1"
html_link="$2"
email="$3"
jekyll_cmd='LANG=en_US.UTF-8 bundle exec jekyll build --trace 2>&1'

sendemail() {
	test -n "$3" && echo -e "To: $3\nSubject: $1\n\n$2" | sendmail -t
}

error_exit() {
	echo -e "$@" >&2
	sendemail "$0: Deployment error" "$@" "$email"
	exit 1
}


test -L "$html_link" || error_exit "Error: $html_link needs to be a symbolic link"
html_base=$(dirname "$html_link")
test -d "$html_base" || error_exit "Error: $html_base needs to be a directory"
html_dir_old=$(realpath "$html_link")
#test -d "$html_dir_old" || error_exit "Error: $html_dir_old needs to be a directory"

type git >/dev/null || error_exit "Error: git not found"
type bundle >/dev/null || error_exit "Error: bundle not found"

revision=$(git -C "$local_repo" rev-parse HEAD) && test -n "$revision" || error_exit "Error: git -C \"$local_repo\" rev-parse HEAD"
timestamp=$(date +%Y%m%d%H%M%S) || error_exit "Error: date +%Y%m%d%H%M%S"
destination_name="${timestamp}_$revision"

res=$(git -C "$local_repo" status --porcelain 2>&1) || error_exit "Error: git status"
if [ -n "$res" ]; then
    error_exit "Error: local repository not is not clean\n$res"
fi

### 1. Update local_repo via git pull
res=$(git -C "$local_repo" pull -q 2>&1) && test -z "$res" || error_exit "Error: git pull failed\n$res"

# use realpath to make absolute, because we need to cd into $local_repo
destination_path=$(realpath "$html_base/$destination_name")
if [ -e "$destination_path" ]; then
	echo "Error: destination $destination_path exists!"
	exit 1
fi

### 2. Jekyll build with source local_repo and destination $(basename html_link)/$(date +%Y%m%d%H%M%S)_$(git parse-rev HEAD)
# without LANG=en_US.UTF-8 the following error occurs: Liquid Exception: invalid byte sequence in US-ASCII in ...
res=$(cd "$local_repo" && rm -rf _site && eval $jekyll_cmd && mv _site "$destination_path") && test -d "$destination_path" || {
	rm -rf "$destination_path"
	error_exit "Error: jekyll build failed\n$res"
}
echo "$res" >&2 # again for apache logs

### 3. Replace symlink html_link atomically with link to newly created destination
# https://stackoverflow.com/questions/307437/moving-a-directory-atomically
# https://jekyllrb.com/docs/deployment/manual/
html_link_temp=$(tempfile "$html_base") || error_exit "Error: tempfile"
ln -sf "$destination_name" "$html_link_temp" || error_exit "Error: ln -sf $destination_name $html_link_temp"
mv -T "$html_link_temp" "$html_link" || error_exit "Error: mv -T $html_link_temp $html_link"

### 4. Remove old htmldir
rm -rf "$html_dir_old"

echo "Deployed successfully"
sendemail "$0: Deployed successfully" "$res" "$email"
